
*********************Byte Objects vs String in Python*************************

Byte objects are sequence of Bytes, whereas Strings are sequence of characters.
Byte objects are in machine readable form internally, Strings are only in human readable form.
Since Byte objects are machine readable, they can be directly stored on the disk. Whereas, Strings need encoding before which 
they can be stored on disk.

1) *************** Encoding **********************

PNG, JPEG, MP3, WAV, ASCII, UTF-8 etc are different forms of encodings. An encoding is a format to represent audio, images, 
text, etc in bytes. Converting Strings to byte objects is termed as encoding. This is necessary so that the text can be stored 
on disk using mapping using ASCII or UTF-8 encoding techniques.
This task is achieved using encode(). It take encoding technique as argument. Default technique is “UTF-8” technique.

# Python code to demonstate String encoding initialising a String  
a = 'GeeksforGeeks'
  
# initialising a byte object 
c = b'GeeksforGeeks'
  
# using encode() to encode the String 
# encoded version of a is stored in d 
# using ASCII mapping 
d = a.encode('ASCII') 
  
# checking if a is converted to bytes or not 
if (d==c): 
    print ("Encoding successful") 
else : print ("Encoding Unsuccessful") 
